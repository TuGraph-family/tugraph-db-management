// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tugraph_management.proto

#ifndef PROTOBUF_INCLUDED_tugraph_5fmanagement_2eproto
#define PROTOBUF_INCLUDED_tugraph_5fmanagement_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tugraph_5fmanagement_2eproto

namespace protobuf_tugraph_5fmanagement_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tugraph_5fmanagement_2eproto
namespace com {
namespace antgroup {
namespace tugraph {
class CreateJobRequest;
class CreateJobRequestDefaultTypeInternal;
extern CreateJobRequestDefaultTypeInternal _CreateJobRequest_default_instance_;
class CreateJobResponse;
class CreateJobResponseDefaultTypeInternal;
extern CreateJobResponseDefaultTypeInternal _CreateJobResponse_default_instance_;
class DeleteJobRequest;
class DeleteJobRequestDefaultTypeInternal;
extern DeleteJobRequestDefaultTypeInternal _DeleteJobRequest_default_instance_;
class DeleteJobResponse;
class DeleteJobResponseDefaultTypeInternal;
extern DeleteJobResponseDefaultTypeInternal _DeleteJobResponse_default_instance_;
class JobManagementRequest;
class JobManagementRequestDefaultTypeInternal;
extern JobManagementRequestDefaultTypeInternal _JobManagementRequest_default_instance_;
class JobManagementResponse;
class JobManagementResponseDefaultTypeInternal;
extern JobManagementResponseDefaultTypeInternal _JobManagementResponse_default_instance_;
class JobResult;
class JobResultDefaultTypeInternal;
extern JobResultDefaultTypeInternal _JobResult_default_instance_;
class JobStatus;
class JobStatusDefaultTypeInternal;
extern JobStatusDefaultTypeInternal _JobStatus_default_instance_;
class ReadJobRequest;
class ReadJobRequestDefaultTypeInternal;
extern ReadJobRequestDefaultTypeInternal _ReadJobRequest_default_instance_;
class ReadJobResponse;
class ReadJobResponseDefaultTypeInternal;
extern ReadJobResponseDefaultTypeInternal _ReadJobResponse_default_instance_;
class UpdateJobRequest;
class UpdateJobRequestDefaultTypeInternal;
extern UpdateJobRequestDefaultTypeInternal _UpdateJobRequest_default_instance_;
class UpdateJobResponse;
class UpdateJobResponseDefaultTypeInternal;
extern UpdateJobResponseDefaultTypeInternal _UpdateJobResponse_default_instance_;
}  // namespace tugraph
}  // namespace antgroup
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::antgroup::tugraph::CreateJobRequest* Arena::CreateMaybeMessage<::com::antgroup::tugraph::CreateJobRequest>(Arena*);
template<> ::com::antgroup::tugraph::CreateJobResponse* Arena::CreateMaybeMessage<::com::antgroup::tugraph::CreateJobResponse>(Arena*);
template<> ::com::antgroup::tugraph::DeleteJobRequest* Arena::CreateMaybeMessage<::com::antgroup::tugraph::DeleteJobRequest>(Arena*);
template<> ::com::antgroup::tugraph::DeleteJobResponse* Arena::CreateMaybeMessage<::com::antgroup::tugraph::DeleteJobResponse>(Arena*);
template<> ::com::antgroup::tugraph::JobManagementRequest* Arena::CreateMaybeMessage<::com::antgroup::tugraph::JobManagementRequest>(Arena*);
template<> ::com::antgroup::tugraph::JobManagementResponse* Arena::CreateMaybeMessage<::com::antgroup::tugraph::JobManagementResponse>(Arena*);
template<> ::com::antgroup::tugraph::JobResult* Arena::CreateMaybeMessage<::com::antgroup::tugraph::JobResult>(Arena*);
template<> ::com::antgroup::tugraph::JobStatus* Arena::CreateMaybeMessage<::com::antgroup::tugraph::JobStatus>(Arena*);
template<> ::com::antgroup::tugraph::ReadJobRequest* Arena::CreateMaybeMessage<::com::antgroup::tugraph::ReadJobRequest>(Arena*);
template<> ::com::antgroup::tugraph::ReadJobResponse* Arena::CreateMaybeMessage<::com::antgroup::tugraph::ReadJobResponse>(Arena*);
template<> ::com::antgroup::tugraph::UpdateJobRequest* Arena::CreateMaybeMessage<::com::antgroup::tugraph::UpdateJobRequest>(Arena*);
template<> ::com::antgroup::tugraph::UpdateJobResponse* Arena::CreateMaybeMessage<::com::antgroup::tugraph::UpdateJobResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace antgroup {
namespace tugraph {

enum ReadJobRequest_ReadType {
  ReadJobRequest_ReadType_READ_ALL = 2,
  ReadJobRequest_ReadType_READ_RESULT = 3
};
bool ReadJobRequest_ReadType_IsValid(int value);
const ReadJobRequest_ReadType ReadJobRequest_ReadType_ReadType_MIN = ReadJobRequest_ReadType_READ_ALL;
const ReadJobRequest_ReadType ReadJobRequest_ReadType_ReadType_MAX = ReadJobRequest_ReadType_READ_RESULT;
const int ReadJobRequest_ReadType_ReadType_ARRAYSIZE = ReadJobRequest_ReadType_ReadType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReadJobRequest_ReadType_descriptor();
inline const ::std::string& ReadJobRequest_ReadType_Name(ReadJobRequest_ReadType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReadJobRequest_ReadType_descriptor(), value);
}
inline bool ReadJobRequest_ReadType_Parse(
    const ::std::string& name, ReadJobRequest_ReadType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReadJobRequest_ReadType>(
    ReadJobRequest_ReadType_descriptor(), name, value);
}
enum JobManagementResponse_ErrorCode {
  JobManagementResponse_ErrorCode_SUCCESS = 1,
  JobManagementResponse_ErrorCode_FAILED = 2
};
bool JobManagementResponse_ErrorCode_IsValid(int value);
const JobManagementResponse_ErrorCode JobManagementResponse_ErrorCode_ErrorCode_MIN = JobManagementResponse_ErrorCode_SUCCESS;
const JobManagementResponse_ErrorCode JobManagementResponse_ErrorCode_ErrorCode_MAX = JobManagementResponse_ErrorCode_FAILED;
const int JobManagementResponse_ErrorCode_ErrorCode_ARRAYSIZE = JobManagementResponse_ErrorCode_ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* JobManagementResponse_ErrorCode_descriptor();
inline const ::std::string& JobManagementResponse_ErrorCode_Name(JobManagementResponse_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    JobManagementResponse_ErrorCode_descriptor(), value);
}
inline bool JobManagementResponse_ErrorCode_Parse(
    const ::std::string& name, JobManagementResponse_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JobManagementResponse_ErrorCode>(
    JobManagementResponse_ErrorCode_descriptor(), name, value);
}
// ===================================================================

class JobStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.antgroup.tugraph.JobStatus) */ {
 public:
  JobStatus();
  virtual ~JobStatus();

  JobStatus(const JobStatus& from);

  inline JobStatus& operator=(const JobStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JobStatus(JobStatus&& from) noexcept
    : JobStatus() {
    *this = ::std::move(from);
  }

  inline JobStatus& operator=(JobStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JobStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobStatus* internal_default_instance() {
    return reinterpret_cast<const JobStatus*>(
               &_JobStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(JobStatus* other);
  friend void swap(JobStatus& a, JobStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JobStatus* New() const final {
    return CreateMaybeMessage<JobStatus>(NULL);
  }

  JobStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JobStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JobStatus& from);
  void MergeFrom(const JobStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JobStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string db_id = 1;
  bool has_db_id() const;
  void clear_db_id();
  static const int kDbIdFieldNumber = 1;
  const ::std::string& db_id() const;
  void set_db_id(const ::std::string& value);
  #if LANG_CXX11
  void set_db_id(::std::string&& value);
  #endif
  void set_db_id(const char* value);
  void set_db_id(const char* value, size_t size);
  ::std::string* mutable_db_id();
  ::std::string* release_db_id();
  void set_allocated_db_id(::std::string* db_id);

  // required string start_time = 4;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  const ::std::string& start_time() const;
  void set_start_time(const ::std::string& value);
  #if LANG_CXX11
  void set_start_time(::std::string&& value);
  #endif
  void set_start_time(const char* value);
  void set_start_time(const char* value, size_t size);
  ::std::string* mutable_start_time();
  ::std::string* release_start_time();
  void set_allocated_start_time(::std::string* start_time);

  // required string period = 5;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 5;
  const ::std::string& period() const;
  void set_period(const ::std::string& value);
  #if LANG_CXX11
  void set_period(::std::string&& value);
  #endif
  void set_period(const char* value);
  void set_period(const char* value, size_t size);
  ::std::string* mutable_period();
  ::std::string* release_period();
  void set_allocated_period(::std::string* period);

  // required string procedure_name = 6;
  bool has_procedure_name() const;
  void clear_procedure_name();
  static const int kProcedureNameFieldNumber = 6;
  const ::std::string& procedure_name() const;
  void set_procedure_name(const ::std::string& value);
  #if LANG_CXX11
  void set_procedure_name(::std::string&& value);
  #endif
  void set_procedure_name(const char* value);
  void set_procedure_name(const char* value, size_t size);
  ::std::string* mutable_procedure_name();
  ::std::string* release_procedure_name();
  void set_allocated_procedure_name(::std::string* procedure_name);

  // required string procedure_type = 7;
  bool has_procedure_type() const;
  void clear_procedure_type();
  static const int kProcedureTypeFieldNumber = 7;
  const ::std::string& procedure_type() const;
  void set_procedure_type(const ::std::string& value);
  #if LANG_CXX11
  void set_procedure_type(::std::string&& value);
  #endif
  void set_procedure_type(const char* value);
  void set_procedure_type(const char* value, size_t size);
  ::std::string* mutable_procedure_type();
  ::std::string* release_procedure_type();
  void set_allocated_procedure_type(::std::string* procedure_type);

  // required string status = 8;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 8;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // required string creator = 9;
  bool has_creator() const;
  void clear_creator();
  static const int kCreatorFieldNumber = 9;
  const ::std::string& creator() const;
  void set_creator(const ::std::string& value);
  #if LANG_CXX11
  void set_creator(::std::string&& value);
  #endif
  void set_creator(const char* value);
  void set_creator(const char* value, size_t size);
  ::std::string* mutable_creator();
  ::std::string* release_creator();
  void set_allocated_creator(::std::string* creator);

  // required string create_time = 10;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 10;
  const ::std::string& create_time() const;
  void set_create_time(const ::std::string& value);
  #if LANG_CXX11
  void set_create_time(::std::string&& value);
  #endif
  void set_create_time(const char* value);
  void set_create_time(const char* value, size_t size);
  ::std::string* mutable_create_time();
  ::std::string* release_create_time();
  void set_allocated_create_time(::std::string* create_time);

  // required int64 job_id = 2;
  bool has_job_id() const;
  void clear_job_id();
  static const int kJobIdFieldNumber = 2;
  ::google::protobuf::int64 job_id() const;
  void set_job_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.antgroup.tugraph.JobStatus)
 private:
  void set_has_db_id();
  void clear_has_db_id();
  void set_has_job_id();
  void clear_has_job_id();
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_period();
  void clear_has_period();
  void set_has_procedure_name();
  void clear_has_procedure_name();
  void set_has_procedure_type();
  void clear_has_procedure_type();
  void set_has_status();
  void clear_has_status();
  void set_has_creator();
  void clear_has_creator();
  void set_has_create_time();
  void clear_has_create_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr db_id_;
  ::google::protobuf::internal::ArenaStringPtr start_time_;
  ::google::protobuf::internal::ArenaStringPtr period_;
  ::google::protobuf::internal::ArenaStringPtr procedure_name_;
  ::google::protobuf::internal::ArenaStringPtr procedure_type_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  ::google::protobuf::internal::ArenaStringPtr creator_;
  ::google::protobuf::internal::ArenaStringPtr create_time_;
  ::google::protobuf::int64 job_id_;
  friend struct ::protobuf_tugraph_5fmanagement_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JobResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.antgroup.tugraph.JobResult) */ {
 public:
  JobResult();
  virtual ~JobResult();

  JobResult(const JobResult& from);

  inline JobResult& operator=(const JobResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JobResult(JobResult&& from) noexcept
    : JobResult() {
    *this = ::std::move(from);
  }

  inline JobResult& operator=(JobResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JobResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobResult* internal_default_instance() {
    return reinterpret_cast<const JobResult*>(
               &_JobResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(JobResult* other);
  friend void swap(JobResult& a, JobResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JobResult* New() const final {
    return CreateMaybeMessage<JobResult>(NULL);
  }

  JobResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JobResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JobResult& from);
  void MergeFrom(const JobResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JobResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::std::string& result() const;
  void set_result(const ::std::string& value);
  #if LANG_CXX11
  void set_result(::std::string&& value);
  #endif
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  ::std::string* mutable_result();
  ::std::string* release_result();
  void set_allocated_result(::std::string* result);

  // @@protoc_insertion_point(class_scope:com.antgroup.tugraph.JobResult)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr result_;
  friend struct ::protobuf_tugraph_5fmanagement_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateJobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.antgroup.tugraph.CreateJobRequest) */ {
 public:
  CreateJobRequest();
  virtual ~CreateJobRequest();

  CreateJobRequest(const CreateJobRequest& from);

  inline CreateJobRequest& operator=(const CreateJobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateJobRequest(CreateJobRequest&& from) noexcept
    : CreateJobRequest() {
    *this = ::std::move(from);
  }

  inline CreateJobRequest& operator=(CreateJobRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateJobRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateJobRequest* internal_default_instance() {
    return reinterpret_cast<const CreateJobRequest*>(
               &_CreateJobRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CreateJobRequest* other);
  friend void swap(CreateJobRequest& a, CreateJobRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateJobRequest* New() const final {
    return CreateMaybeMessage<CreateJobRequest>(NULL);
  }

  CreateJobRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateJobRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateJobRequest& from);
  void MergeFrom(const CreateJobRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateJobRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string start_time = 3;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  const ::std::string& start_time() const;
  void set_start_time(const ::std::string& value);
  #if LANG_CXX11
  void set_start_time(::std::string&& value);
  #endif
  void set_start_time(const char* value);
  void set_start_time(const char* value, size_t size);
  ::std::string* mutable_start_time();
  ::std::string* release_start_time();
  void set_allocated_start_time(::std::string* start_time);

  // required string period = 4;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 4;
  const ::std::string& period() const;
  void set_period(const ::std::string& value);
  #if LANG_CXX11
  void set_period(::std::string&& value);
  #endif
  void set_period(const char* value);
  void set_period(const char* value, size_t size);
  ::std::string* mutable_period();
  ::std::string* release_period();
  void set_allocated_period(::std::string* period);

  // required string procedure_name = 5;
  bool has_procedure_name() const;
  void clear_procedure_name();
  static const int kProcedureNameFieldNumber = 5;
  const ::std::string& procedure_name() const;
  void set_procedure_name(const ::std::string& value);
  #if LANG_CXX11
  void set_procedure_name(::std::string&& value);
  #endif
  void set_procedure_name(const char* value);
  void set_procedure_name(const char* value, size_t size);
  ::std::string* mutable_procedure_name();
  ::std::string* release_procedure_name();
  void set_allocated_procedure_name(::std::string* procedure_name);

  // required string procedure_type = 6;
  bool has_procedure_type() const;
  void clear_procedure_type();
  static const int kProcedureTypeFieldNumber = 6;
  const ::std::string& procedure_type() const;
  void set_procedure_type(const ::std::string& value);
  #if LANG_CXX11
  void set_procedure_type(::std::string&& value);
  #endif
  void set_procedure_type(const char* value);
  void set_procedure_type(const char* value, size_t size);
  ::std::string* mutable_procedure_type();
  ::std::string* release_procedure_type();
  void set_allocated_procedure_type(::std::string* procedure_type);

  // required string creator = 7;
  bool has_creator() const;
  void clear_creator();
  static const int kCreatorFieldNumber = 7;
  const ::std::string& creator() const;
  void set_creator(const ::std::string& value);
  #if LANG_CXX11
  void set_creator(::std::string&& value);
  #endif
  void set_creator(const char* value);
  void set_creator(const char* value, size_t size);
  ::std::string* mutable_creator();
  ::std::string* release_creator();
  void set_allocated_creator(::std::string* creator);

  // required string create_time = 8;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 8;
  const ::std::string& create_time() const;
  void set_create_time(const ::std::string& value);
  #if LANG_CXX11
  void set_create_time(::std::string&& value);
  #endif
  void set_create_time(const char* value);
  void set_create_time(const char* value, size_t size);
  ::std::string* mutable_create_time();
  ::std::string* release_create_time();
  void set_allocated_create_time(::std::string* create_time);

  // @@protoc_insertion_point(class_scope:com.antgroup.tugraph.CreateJobRequest)
 private:
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_period();
  void clear_has_period();
  void set_has_procedure_name();
  void clear_has_procedure_name();
  void set_has_procedure_type();
  void clear_has_procedure_type();
  void set_has_creator();
  void clear_has_creator();
  void set_has_create_time();
  void clear_has_create_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr start_time_;
  ::google::protobuf::internal::ArenaStringPtr period_;
  ::google::protobuf::internal::ArenaStringPtr procedure_name_;
  ::google::protobuf::internal::ArenaStringPtr procedure_type_;
  ::google::protobuf::internal::ArenaStringPtr creator_;
  ::google::protobuf::internal::ArenaStringPtr create_time_;
  friend struct ::protobuf_tugraph_5fmanagement_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateJobResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.antgroup.tugraph.CreateJobResponse) */ {
 public:
  CreateJobResponse();
  virtual ~CreateJobResponse();

  CreateJobResponse(const CreateJobResponse& from);

  inline CreateJobResponse& operator=(const CreateJobResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateJobResponse(CreateJobResponse&& from) noexcept
    : CreateJobResponse() {
    *this = ::std::move(from);
  }

  inline CreateJobResponse& operator=(CreateJobResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateJobResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateJobResponse* internal_default_instance() {
    return reinterpret_cast<const CreateJobResponse*>(
               &_CreateJobResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CreateJobResponse* other);
  friend void swap(CreateJobResponse& a, CreateJobResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateJobResponse* New() const final {
    return CreateMaybeMessage<CreateJobResponse>(NULL);
  }

  CreateJobResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateJobResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateJobResponse& from);
  void MergeFrom(const CreateJobResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateJobResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 job_id = 2;
  bool has_job_id() const;
  void clear_job_id();
  static const int kJobIdFieldNumber = 2;
  ::google::protobuf::int64 job_id() const;
  void set_job_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.antgroup.tugraph.CreateJobResponse)
 private:
  void set_has_job_id();
  void clear_has_job_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 job_id_;
  friend struct ::protobuf_tugraph_5fmanagement_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadJobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.antgroup.tugraph.ReadJobRequest) */ {
 public:
  ReadJobRequest();
  virtual ~ReadJobRequest();

  ReadJobRequest(const ReadJobRequest& from);

  inline ReadJobRequest& operator=(const ReadJobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadJobRequest(ReadJobRequest&& from) noexcept
    : ReadJobRequest() {
    *this = ::std::move(from);
  }

  inline ReadJobRequest& operator=(ReadJobRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadJobRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadJobRequest* internal_default_instance() {
    return reinterpret_cast<const ReadJobRequest*>(
               &_ReadJobRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ReadJobRequest* other);
  friend void swap(ReadJobRequest& a, ReadJobRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadJobRequest* New() const final {
    return CreateMaybeMessage<ReadJobRequest>(NULL);
  }

  ReadJobRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadJobRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadJobRequest& from);
  void MergeFrom(const ReadJobRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadJobRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ReadJobRequest_ReadType ReadType;
  static const ReadType READ_ALL =
    ReadJobRequest_ReadType_READ_ALL;
  static const ReadType READ_RESULT =
    ReadJobRequest_ReadType_READ_RESULT;
  static inline bool ReadType_IsValid(int value) {
    return ReadJobRequest_ReadType_IsValid(value);
  }
  static const ReadType ReadType_MIN =
    ReadJobRequest_ReadType_ReadType_MIN;
  static const ReadType ReadType_MAX =
    ReadJobRequest_ReadType_ReadType_MAX;
  static const int ReadType_ARRAYSIZE =
    ReadJobRequest_ReadType_ReadType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ReadType_descriptor() {
    return ReadJobRequest_ReadType_descriptor();
  }
  static inline const ::std::string& ReadType_Name(ReadType value) {
    return ReadJobRequest_ReadType_Name(value);
  }
  static inline bool ReadType_Parse(const ::std::string& name,
      ReadType* value) {
    return ReadJobRequest_ReadType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 job_id = 1;
  bool has_job_id() const;
  void clear_job_id();
  static const int kJobIdFieldNumber = 1;
  ::google::protobuf::int64 job_id() const;
  void set_job_id(::google::protobuf::int64 value);

  // required .com.antgroup.tugraph.ReadJobRequest.ReadType read_type = 4;
  bool has_read_type() const;
  void clear_read_type();
  static const int kReadTypeFieldNumber = 4;
  ::com::antgroup::tugraph::ReadJobRequest_ReadType read_type() const;
  void set_read_type(::com::antgroup::tugraph::ReadJobRequest_ReadType value);

  // @@protoc_insertion_point(class_scope:com.antgroup.tugraph.ReadJobRequest)
 private:
  void set_has_read_type();
  void clear_has_read_type();
  void set_has_job_id();
  void clear_has_job_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 job_id_;
  int read_type_;
  friend struct ::protobuf_tugraph_5fmanagement_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadJobResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.antgroup.tugraph.ReadJobResponse) */ {
 public:
  ReadJobResponse();
  virtual ~ReadJobResponse();

  ReadJobResponse(const ReadJobResponse& from);

  inline ReadJobResponse& operator=(const ReadJobResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadJobResponse(ReadJobResponse&& from) noexcept
    : ReadJobResponse() {
    *this = ::std::move(from);
  }

  inline ReadJobResponse& operator=(ReadJobResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadJobResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadJobResponse* internal_default_instance() {
    return reinterpret_cast<const ReadJobResponse*>(
               &_ReadJobResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ReadJobResponse* other);
  friend void swap(ReadJobResponse& a, ReadJobResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadJobResponse* New() const final {
    return CreateMaybeMessage<ReadJobResponse>(NULL);
  }

  ReadJobResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadJobResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadJobResponse& from);
  void MergeFrom(const ReadJobResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadJobResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::std::string& result() const;
  void set_result(const ::std::string& value);
  #if LANG_CXX11
  void set_result(::std::string&& value);
  #endif
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  ::std::string* mutable_result();
  ::std::string* release_result();
  void set_allocated_result(::std::string* result);

  // @@protoc_insertion_point(class_scope:com.antgroup.tugraph.ReadJobResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr result_;
  friend struct ::protobuf_tugraph_5fmanagement_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateJobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.antgroup.tugraph.UpdateJobRequest) */ {
 public:
  UpdateJobRequest();
  virtual ~UpdateJobRequest();

  UpdateJobRequest(const UpdateJobRequest& from);

  inline UpdateJobRequest& operator=(const UpdateJobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateJobRequest(UpdateJobRequest&& from) noexcept
    : UpdateJobRequest() {
    *this = ::std::move(from);
  }

  inline UpdateJobRequest& operator=(UpdateJobRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateJobRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateJobRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateJobRequest*>(
               &_UpdateJobRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(UpdateJobRequest* other);
  friend void swap(UpdateJobRequest& a, UpdateJobRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateJobRequest* New() const final {
    return CreateMaybeMessage<UpdateJobRequest>(NULL);
  }

  UpdateJobRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateJobRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateJobRequest& from);
  void MergeFrom(const UpdateJobRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateJobRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // optional string runtime = 3;
  bool has_runtime() const;
  void clear_runtime();
  static const int kRuntimeFieldNumber = 3;
  const ::std::string& runtime() const;
  void set_runtime(const ::std::string& value);
  #if LANG_CXX11
  void set_runtime(::std::string&& value);
  #endif
  void set_runtime(const char* value);
  void set_runtime(const char* value, size_t size);
  ::std::string* mutable_runtime();
  ::std::string* release_runtime();
  void set_allocated_runtime(::std::string* runtime);

  // optional string result = 4;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  const ::std::string& result() const;
  void set_result(const ::std::string& value);
  #if LANG_CXX11
  void set_result(::std::string&& value);
  #endif
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  ::std::string* mutable_result();
  ::std::string* release_result();
  void set_allocated_result(::std::string* result);

  // required int64 job_id = 1;
  bool has_job_id() const;
  void clear_job_id();
  static const int kJobIdFieldNumber = 1;
  ::google::protobuf::int64 job_id() const;
  void set_job_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.antgroup.tugraph.UpdateJobRequest)
 private:
  void set_has_job_id();
  void clear_has_job_id();
  void set_has_status();
  void clear_has_status();
  void set_has_runtime();
  void clear_has_runtime();
  void set_has_result();
  void clear_has_result();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  ::google::protobuf::internal::ArenaStringPtr runtime_;
  ::google::protobuf::internal::ArenaStringPtr result_;
  ::google::protobuf::int64 job_id_;
  friend struct ::protobuf_tugraph_5fmanagement_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateJobResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.antgroup.tugraph.UpdateJobResponse) */ {
 public:
  UpdateJobResponse();
  virtual ~UpdateJobResponse();

  UpdateJobResponse(const UpdateJobResponse& from);

  inline UpdateJobResponse& operator=(const UpdateJobResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateJobResponse(UpdateJobResponse&& from) noexcept
    : UpdateJobResponse() {
    *this = ::std::move(from);
  }

  inline UpdateJobResponse& operator=(UpdateJobResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateJobResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateJobResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateJobResponse*>(
               &_UpdateJobResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(UpdateJobResponse* other);
  friend void swap(UpdateJobResponse& a, UpdateJobResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateJobResponse* New() const final {
    return CreateMaybeMessage<UpdateJobResponse>(NULL);
  }

  UpdateJobResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateJobResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateJobResponse& from);
  void MergeFrom(const UpdateJobResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateJobResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.antgroup.tugraph.UpdateJobResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tugraph_5fmanagement_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteJobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.antgroup.tugraph.DeleteJobRequest) */ {
 public:
  DeleteJobRequest();
  virtual ~DeleteJobRequest();

  DeleteJobRequest(const DeleteJobRequest& from);

  inline DeleteJobRequest& operator=(const DeleteJobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteJobRequest(DeleteJobRequest&& from) noexcept
    : DeleteJobRequest() {
    *this = ::std::move(from);
  }

  inline DeleteJobRequest& operator=(DeleteJobRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteJobRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteJobRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteJobRequest*>(
               &_DeleteJobRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(DeleteJobRequest* other);
  friend void swap(DeleteJobRequest& a, DeleteJobRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteJobRequest* New() const final {
    return CreateMaybeMessage<DeleteJobRequest>(NULL);
  }

  DeleteJobRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteJobRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteJobRequest& from);
  void MergeFrom(const DeleteJobRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteJobRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string procedure_name = 1;
  bool has_procedure_name() const;
  void clear_procedure_name();
  static const int kProcedureNameFieldNumber = 1;
  const ::std::string& procedure_name() const;
  void set_procedure_name(const ::std::string& value);
  #if LANG_CXX11
  void set_procedure_name(::std::string&& value);
  #endif
  void set_procedure_name(const char* value);
  void set_procedure_name(const char* value, size_t size);
  ::std::string* mutable_procedure_name();
  ::std::string* release_procedure_name();
  void set_allocated_procedure_name(::std::string* procedure_name);

  // @@protoc_insertion_point(class_scope:com.antgroup.tugraph.DeleteJobRequest)
 private:
  void set_has_procedure_name();
  void clear_has_procedure_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr procedure_name_;
  friend struct ::protobuf_tugraph_5fmanagement_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteJobResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.antgroup.tugraph.DeleteJobResponse) */ {
 public:
  DeleteJobResponse();
  virtual ~DeleteJobResponse();

  DeleteJobResponse(const DeleteJobResponse& from);

  inline DeleteJobResponse& operator=(const DeleteJobResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteJobResponse(DeleteJobResponse&& from) noexcept
    : DeleteJobResponse() {
    *this = ::std::move(from);
  }

  inline DeleteJobResponse& operator=(DeleteJobResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteJobResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteJobResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteJobResponse*>(
               &_DeleteJobResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(DeleteJobResponse* other);
  friend void swap(DeleteJobResponse& a, DeleteJobResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteJobResponse* New() const final {
    return CreateMaybeMessage<DeleteJobResponse>(NULL);
  }

  DeleteJobResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteJobResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteJobResponse& from);
  void MergeFrom(const DeleteJobResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteJobResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.antgroup.tugraph.DeleteJobResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tugraph_5fmanagement_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JobManagementRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.antgroup.tugraph.JobManagementRequest) */ {
 public:
  JobManagementRequest();
  virtual ~JobManagementRequest();

  JobManagementRequest(const JobManagementRequest& from);

  inline JobManagementRequest& operator=(const JobManagementRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JobManagementRequest(JobManagementRequest&& from) noexcept
    : JobManagementRequest() {
    *this = ::std::move(from);
  }

  inline JobManagementRequest& operator=(JobManagementRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JobManagementRequest& default_instance();

  enum ReqCase {
    kCreateJobRequest = 1,
    kReadJobRequest = 2,
    kUpdateJobRequest = 3,
    kDeleteJobRequest = 4,
    REQ_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobManagementRequest* internal_default_instance() {
    return reinterpret_cast<const JobManagementRequest*>(
               &_JobManagementRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(JobManagementRequest* other);
  friend void swap(JobManagementRequest& a, JobManagementRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JobManagementRequest* New() const final {
    return CreateMaybeMessage<JobManagementRequest>(NULL);
  }

  JobManagementRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JobManagementRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JobManagementRequest& from);
  void MergeFrom(const JobManagementRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JobManagementRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string db_host = 5;
  bool has_db_host() const;
  void clear_db_host();
  static const int kDbHostFieldNumber = 5;
  const ::std::string& db_host() const;
  void set_db_host(const ::std::string& value);
  #if LANG_CXX11
  void set_db_host(::std::string&& value);
  #endif
  void set_db_host(const char* value);
  void set_db_host(const char* value, size_t size);
  ::std::string* mutable_db_host();
  ::std::string* release_db_host();
  void set_allocated_db_host(::std::string* db_host);

  // required string db_port = 6;
  bool has_db_port() const;
  void clear_db_port();
  static const int kDbPortFieldNumber = 6;
  const ::std::string& db_port() const;
  void set_db_port(const ::std::string& value);
  #if LANG_CXX11
  void set_db_port(::std::string&& value);
  #endif
  void set_db_port(const char* value);
  void set_db_port(const char* value, size_t size);
  ::std::string* mutable_db_port();
  ::std::string* release_db_port();
  void set_allocated_db_port(::std::string* db_port);

  // optional .com.antgroup.tugraph.CreateJobRequest create_job_request = 1;
  bool has_create_job_request() const;
  void clear_create_job_request();
  static const int kCreateJobRequestFieldNumber = 1;
  private:
  const ::com::antgroup::tugraph::CreateJobRequest& _internal_create_job_request() const;
  public:
  const ::com::antgroup::tugraph::CreateJobRequest& create_job_request() const;
  ::com::antgroup::tugraph::CreateJobRequest* release_create_job_request();
  ::com::antgroup::tugraph::CreateJobRequest* mutable_create_job_request();
  void set_allocated_create_job_request(::com::antgroup::tugraph::CreateJobRequest* create_job_request);

  // optional .com.antgroup.tugraph.ReadJobRequest read_job_request = 2;
  bool has_read_job_request() const;
  void clear_read_job_request();
  static const int kReadJobRequestFieldNumber = 2;
  private:
  const ::com::antgroup::tugraph::ReadJobRequest& _internal_read_job_request() const;
  public:
  const ::com::antgroup::tugraph::ReadJobRequest& read_job_request() const;
  ::com::antgroup::tugraph::ReadJobRequest* release_read_job_request();
  ::com::antgroup::tugraph::ReadJobRequest* mutable_read_job_request();
  void set_allocated_read_job_request(::com::antgroup::tugraph::ReadJobRequest* read_job_request);

  // optional .com.antgroup.tugraph.UpdateJobRequest update_job_request = 3;
  bool has_update_job_request() const;
  void clear_update_job_request();
  static const int kUpdateJobRequestFieldNumber = 3;
  private:
  const ::com::antgroup::tugraph::UpdateJobRequest& _internal_update_job_request() const;
  public:
  const ::com::antgroup::tugraph::UpdateJobRequest& update_job_request() const;
  ::com::antgroup::tugraph::UpdateJobRequest* release_update_job_request();
  ::com::antgroup::tugraph::UpdateJobRequest* mutable_update_job_request();
  void set_allocated_update_job_request(::com::antgroup::tugraph::UpdateJobRequest* update_job_request);

  // optional .com.antgroup.tugraph.DeleteJobRequest delete_job_request = 4;
  bool has_delete_job_request() const;
  void clear_delete_job_request();
  static const int kDeleteJobRequestFieldNumber = 4;
  private:
  const ::com::antgroup::tugraph::DeleteJobRequest& _internal_delete_job_request() const;
  public:
  const ::com::antgroup::tugraph::DeleteJobRequest& delete_job_request() const;
  ::com::antgroup::tugraph::DeleteJobRequest* release_delete_job_request();
  ::com::antgroup::tugraph::DeleteJobRequest* mutable_delete_job_request();
  void set_allocated_delete_job_request(::com::antgroup::tugraph::DeleteJobRequest* delete_job_request);

  void clear_Req();
  ReqCase Req_case() const;
  // @@protoc_insertion_point(class_scope:com.antgroup.tugraph.JobManagementRequest)
 private:
  void set_has_db_host();
  void clear_has_db_host();
  void set_has_db_port();
  void clear_has_db_port();
  void set_has_create_job_request();
  void set_has_read_job_request();
  void set_has_update_job_request();
  void set_has_delete_job_request();

  inline bool has_Req() const;
  inline void clear_has_Req();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr db_host_;
  ::google::protobuf::internal::ArenaStringPtr db_port_;
  union ReqUnion {
    ReqUnion() {}
    ::com::antgroup::tugraph::CreateJobRequest* create_job_request_;
    ::com::antgroup::tugraph::ReadJobRequest* read_job_request_;
    ::com::antgroup::tugraph::UpdateJobRequest* update_job_request_;
    ::com::antgroup::tugraph::DeleteJobRequest* delete_job_request_;
  } Req_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_tugraph_5fmanagement_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JobManagementResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.antgroup.tugraph.JobManagementResponse) */ {
 public:
  JobManagementResponse();
  virtual ~JobManagementResponse();

  JobManagementResponse(const JobManagementResponse& from);

  inline JobManagementResponse& operator=(const JobManagementResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JobManagementResponse(JobManagementResponse&& from) noexcept
    : JobManagementResponse() {
    *this = ::std::move(from);
  }

  inline JobManagementResponse& operator=(JobManagementResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JobManagementResponse& default_instance();

  enum RespCase {
    kCreateJobResponse = 1,
    kReadJobResponse = 2,
    kUpdateJobResponse = 3,
    kDeleteJobResponse = 4,
    RESP_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobManagementResponse* internal_default_instance() {
    return reinterpret_cast<const JobManagementResponse*>(
               &_JobManagementResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(JobManagementResponse* other);
  friend void swap(JobManagementResponse& a, JobManagementResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JobManagementResponse* New() const final {
    return CreateMaybeMessage<JobManagementResponse>(NULL);
  }

  JobManagementResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JobManagementResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JobManagementResponse& from);
  void MergeFrom(const JobManagementResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JobManagementResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef JobManagementResponse_ErrorCode ErrorCode;
  static const ErrorCode SUCCESS =
    JobManagementResponse_ErrorCode_SUCCESS;
  static const ErrorCode FAILED =
    JobManagementResponse_ErrorCode_FAILED;
  static inline bool ErrorCode_IsValid(int value) {
    return JobManagementResponse_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    JobManagementResponse_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    JobManagementResponse_ErrorCode_ErrorCode_MAX;
  static const int ErrorCode_ARRAYSIZE =
    JobManagementResponse_ErrorCode_ErrorCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return JobManagementResponse_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return JobManagementResponse_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return JobManagementResponse_ErrorCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .com.antgroup.tugraph.JobManagementResponse.ErrorCode error_code = 5;
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 5;
  ::com::antgroup::tugraph::JobManagementResponse_ErrorCode error_code() const;
  void set_error_code(::com::antgroup::tugraph::JobManagementResponse_ErrorCode value);

  // optional .com.antgroup.tugraph.CreateJobResponse create_job_response = 1;
  bool has_create_job_response() const;
  void clear_create_job_response();
  static const int kCreateJobResponseFieldNumber = 1;
  private:
  const ::com::antgroup::tugraph::CreateJobResponse& _internal_create_job_response() const;
  public:
  const ::com::antgroup::tugraph::CreateJobResponse& create_job_response() const;
  ::com::antgroup::tugraph::CreateJobResponse* release_create_job_response();
  ::com::antgroup::tugraph::CreateJobResponse* mutable_create_job_response();
  void set_allocated_create_job_response(::com::antgroup::tugraph::CreateJobResponse* create_job_response);

  // optional .com.antgroup.tugraph.ReadJobResponse read_job_response = 2;
  bool has_read_job_response() const;
  void clear_read_job_response();
  static const int kReadJobResponseFieldNumber = 2;
  private:
  const ::com::antgroup::tugraph::ReadJobResponse& _internal_read_job_response() const;
  public:
  const ::com::antgroup::tugraph::ReadJobResponse& read_job_response() const;
  ::com::antgroup::tugraph::ReadJobResponse* release_read_job_response();
  ::com::antgroup::tugraph::ReadJobResponse* mutable_read_job_response();
  void set_allocated_read_job_response(::com::antgroup::tugraph::ReadJobResponse* read_job_response);

  // optional .com.antgroup.tugraph.UpdateJobResponse update_job_response = 3;
  bool has_update_job_response() const;
  void clear_update_job_response();
  static const int kUpdateJobResponseFieldNumber = 3;
  private:
  const ::com::antgroup::tugraph::UpdateJobResponse& _internal_update_job_response() const;
  public:
  const ::com::antgroup::tugraph::UpdateJobResponse& update_job_response() const;
  ::com::antgroup::tugraph::UpdateJobResponse* release_update_job_response();
  ::com::antgroup::tugraph::UpdateJobResponse* mutable_update_job_response();
  void set_allocated_update_job_response(::com::antgroup::tugraph::UpdateJobResponse* update_job_response);

  // optional .com.antgroup.tugraph.DeleteJobResponse delete_job_response = 4;
  bool has_delete_job_response() const;
  void clear_delete_job_response();
  static const int kDeleteJobResponseFieldNumber = 4;
  private:
  const ::com::antgroup::tugraph::DeleteJobResponse& _internal_delete_job_response() const;
  public:
  const ::com::antgroup::tugraph::DeleteJobResponse& delete_job_response() const;
  ::com::antgroup::tugraph::DeleteJobResponse* release_delete_job_response();
  ::com::antgroup::tugraph::DeleteJobResponse* mutable_delete_job_response();
  void set_allocated_delete_job_response(::com::antgroup::tugraph::DeleteJobResponse* delete_job_response);

  void clear_Resp();
  RespCase Resp_case() const;
  // @@protoc_insertion_point(class_scope:com.antgroup.tugraph.JobManagementResponse)
 private:
  void set_has_error_code();
  void clear_has_error_code();
  void set_has_create_job_response();
  void set_has_read_job_response();
  void set_has_update_job_response();
  void set_has_delete_job_response();

  inline bool has_Resp() const;
  inline void clear_has_Resp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int error_code_;
  union RespUnion {
    RespUnion() {}
    ::com::antgroup::tugraph::CreateJobResponse* create_job_response_;
    ::com::antgroup::tugraph::ReadJobResponse* read_job_response_;
    ::com::antgroup::tugraph::UpdateJobResponse* update_job_response_;
    ::com::antgroup::tugraph::DeleteJobResponse* delete_job_response_;
  } Resp_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_tugraph_5fmanagement_2eproto::TableStruct;
};
// ===================================================================

class JobManagementService_Stub;

class JobManagementService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline JobManagementService() {};
 public:
  virtual ~JobManagementService();

  typedef JobManagementService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void handleRequest(::google::protobuf::RpcController* controller,
                       const ::com::antgroup::tugraph::JobManagementRequest* request,
                       ::com::antgroup::tugraph::JobManagementResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(JobManagementService);
};

class JobManagementService_Stub : public JobManagementService {
 public:
  JobManagementService_Stub(::google::protobuf::RpcChannel* channel);
  JobManagementService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~JobManagementService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements JobManagementService ------------------------------------------

  void handleRequest(::google::protobuf::RpcController* controller,
                       const ::com::antgroup::tugraph::JobManagementRequest* request,
                       ::com::antgroup::tugraph::JobManagementResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(JobManagementService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// JobStatus

// required string db_id = 1;
inline bool JobStatus::has_db_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobStatus::set_has_db_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JobStatus::clear_has_db_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JobStatus::clear_db_id() {
  db_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db_id();
}
inline const ::std::string& JobStatus::db_id() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobStatus.db_id)
  return db_id_.GetNoArena();
}
inline void JobStatus::set_db_id(const ::std::string& value) {
  set_has_db_id();
  db_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.JobStatus.db_id)
}
#if LANG_CXX11
inline void JobStatus::set_db_id(::std::string&& value) {
  set_has_db_id();
  db_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.JobStatus.db_id)
}
#endif
inline void JobStatus::set_db_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_db_id();
  db_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.JobStatus.db_id)
}
inline void JobStatus::set_db_id(const char* value, size_t size) {
  set_has_db_id();
  db_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.JobStatus.db_id)
}
inline ::std::string* JobStatus::mutable_db_id() {
  set_has_db_id();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobStatus.db_id)
  return db_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobStatus::release_db_id() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobStatus.db_id)
  if (!has_db_id()) {
    return NULL;
  }
  clear_has_db_id();
  return db_id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobStatus::set_allocated_db_id(::std::string* db_id) {
  if (db_id != NULL) {
    set_has_db_id();
  } else {
    clear_has_db_id();
  }
  db_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_id);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.JobStatus.db_id)
}

// required int64 job_id = 2;
inline bool JobStatus::has_job_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JobStatus::set_has_job_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void JobStatus::clear_has_job_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void JobStatus::clear_job_id() {
  job_id_ = GOOGLE_LONGLONG(0);
  clear_has_job_id();
}
inline ::google::protobuf::int64 JobStatus::job_id() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobStatus.job_id)
  return job_id_;
}
inline void JobStatus::set_job_id(::google::protobuf::int64 value) {
  set_has_job_id();
  job_id_ = value;
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.JobStatus.job_id)
}

// required string start_time = 4;
inline bool JobStatus::has_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobStatus::set_has_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JobStatus::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JobStatus::clear_start_time() {
  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_start_time();
}
inline const ::std::string& JobStatus::start_time() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobStatus.start_time)
  return start_time_.GetNoArena();
}
inline void JobStatus::set_start_time(const ::std::string& value) {
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.JobStatus.start_time)
}
#if LANG_CXX11
inline void JobStatus::set_start_time(::std::string&& value) {
  set_has_start_time();
  start_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.JobStatus.start_time)
}
#endif
inline void JobStatus::set_start_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.JobStatus.start_time)
}
inline void JobStatus::set_start_time(const char* value, size_t size) {
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.JobStatus.start_time)
}
inline ::std::string* JobStatus::mutable_start_time() {
  set_has_start_time();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobStatus.start_time)
  return start_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobStatus::release_start_time() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobStatus.start_time)
  if (!has_start_time()) {
    return NULL;
  }
  clear_has_start_time();
  return start_time_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobStatus::set_allocated_start_time(::std::string* start_time) {
  if (start_time != NULL) {
    set_has_start_time();
  } else {
    clear_has_start_time();
  }
  start_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_time);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.JobStatus.start_time)
}

// required string period = 5;
inline bool JobStatus::has_period() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobStatus::set_has_period() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JobStatus::clear_has_period() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JobStatus::clear_period() {
  period_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_period();
}
inline const ::std::string& JobStatus::period() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobStatus.period)
  return period_.GetNoArena();
}
inline void JobStatus::set_period(const ::std::string& value) {
  set_has_period();
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.JobStatus.period)
}
#if LANG_CXX11
inline void JobStatus::set_period(::std::string&& value) {
  set_has_period();
  period_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.JobStatus.period)
}
#endif
inline void JobStatus::set_period(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_period();
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.JobStatus.period)
}
inline void JobStatus::set_period(const char* value, size_t size) {
  set_has_period();
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.JobStatus.period)
}
inline ::std::string* JobStatus::mutable_period() {
  set_has_period();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobStatus.period)
  return period_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobStatus::release_period() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobStatus.period)
  if (!has_period()) {
    return NULL;
  }
  clear_has_period();
  return period_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobStatus::set_allocated_period(::std::string* period) {
  if (period != NULL) {
    set_has_period();
  } else {
    clear_has_period();
  }
  period_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), period);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.JobStatus.period)
}

// required string procedure_name = 6;
inline bool JobStatus::has_procedure_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobStatus::set_has_procedure_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JobStatus::clear_has_procedure_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JobStatus::clear_procedure_name() {
  procedure_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_procedure_name();
}
inline const ::std::string& JobStatus::procedure_name() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobStatus.procedure_name)
  return procedure_name_.GetNoArena();
}
inline void JobStatus::set_procedure_name(const ::std::string& value) {
  set_has_procedure_name();
  procedure_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.JobStatus.procedure_name)
}
#if LANG_CXX11
inline void JobStatus::set_procedure_name(::std::string&& value) {
  set_has_procedure_name();
  procedure_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.JobStatus.procedure_name)
}
#endif
inline void JobStatus::set_procedure_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_procedure_name();
  procedure_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.JobStatus.procedure_name)
}
inline void JobStatus::set_procedure_name(const char* value, size_t size) {
  set_has_procedure_name();
  procedure_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.JobStatus.procedure_name)
}
inline ::std::string* JobStatus::mutable_procedure_name() {
  set_has_procedure_name();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobStatus.procedure_name)
  return procedure_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobStatus::release_procedure_name() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobStatus.procedure_name)
  if (!has_procedure_name()) {
    return NULL;
  }
  clear_has_procedure_name();
  return procedure_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobStatus::set_allocated_procedure_name(::std::string* procedure_name) {
  if (procedure_name != NULL) {
    set_has_procedure_name();
  } else {
    clear_has_procedure_name();
  }
  procedure_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), procedure_name);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.JobStatus.procedure_name)
}

// required string procedure_type = 7;
inline bool JobStatus::has_procedure_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JobStatus::set_has_procedure_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JobStatus::clear_has_procedure_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JobStatus::clear_procedure_type() {
  procedure_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_procedure_type();
}
inline const ::std::string& JobStatus::procedure_type() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobStatus.procedure_type)
  return procedure_type_.GetNoArena();
}
inline void JobStatus::set_procedure_type(const ::std::string& value) {
  set_has_procedure_type();
  procedure_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.JobStatus.procedure_type)
}
#if LANG_CXX11
inline void JobStatus::set_procedure_type(::std::string&& value) {
  set_has_procedure_type();
  procedure_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.JobStatus.procedure_type)
}
#endif
inline void JobStatus::set_procedure_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_procedure_type();
  procedure_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.JobStatus.procedure_type)
}
inline void JobStatus::set_procedure_type(const char* value, size_t size) {
  set_has_procedure_type();
  procedure_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.JobStatus.procedure_type)
}
inline ::std::string* JobStatus::mutable_procedure_type() {
  set_has_procedure_type();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobStatus.procedure_type)
  return procedure_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobStatus::release_procedure_type() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobStatus.procedure_type)
  if (!has_procedure_type()) {
    return NULL;
  }
  clear_has_procedure_type();
  return procedure_type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobStatus::set_allocated_procedure_type(::std::string* procedure_type) {
  if (procedure_type != NULL) {
    set_has_procedure_type();
  } else {
    clear_has_procedure_type();
  }
  procedure_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), procedure_type);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.JobStatus.procedure_type)
}

// required string status = 8;
inline bool JobStatus::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JobStatus::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JobStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JobStatus::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_status();
}
inline const ::std::string& JobStatus::status() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobStatus.status)
  return status_.GetNoArena();
}
inline void JobStatus::set_status(const ::std::string& value) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.JobStatus.status)
}
#if LANG_CXX11
inline void JobStatus::set_status(::std::string&& value) {
  set_has_status();
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.JobStatus.status)
}
#endif
inline void JobStatus::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.JobStatus.status)
}
inline void JobStatus::set_status(const char* value, size_t size) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.JobStatus.status)
}
inline ::std::string* JobStatus::mutable_status() {
  set_has_status();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobStatus.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobStatus::release_status() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobStatus.status)
  if (!has_status()) {
    return NULL;
  }
  clear_has_status();
  return status_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobStatus::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    set_has_status();
  } else {
    clear_has_status();
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.JobStatus.status)
}

// required string creator = 9;
inline bool JobStatus::has_creator() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JobStatus::set_has_creator() {
  _has_bits_[0] |= 0x00000040u;
}
inline void JobStatus::clear_has_creator() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void JobStatus::clear_creator() {
  creator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creator();
}
inline const ::std::string& JobStatus::creator() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobStatus.creator)
  return creator_.GetNoArena();
}
inline void JobStatus::set_creator(const ::std::string& value) {
  set_has_creator();
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.JobStatus.creator)
}
#if LANG_CXX11
inline void JobStatus::set_creator(::std::string&& value) {
  set_has_creator();
  creator_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.JobStatus.creator)
}
#endif
inline void JobStatus::set_creator(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_creator();
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.JobStatus.creator)
}
inline void JobStatus::set_creator(const char* value, size_t size) {
  set_has_creator();
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.JobStatus.creator)
}
inline ::std::string* JobStatus::mutable_creator() {
  set_has_creator();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobStatus.creator)
  return creator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobStatus::release_creator() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobStatus.creator)
  if (!has_creator()) {
    return NULL;
  }
  clear_has_creator();
  return creator_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobStatus::set_allocated_creator(::std::string* creator) {
  if (creator != NULL) {
    set_has_creator();
  } else {
    clear_has_creator();
  }
  creator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creator);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.JobStatus.creator)
}

// required string create_time = 10;
inline bool JobStatus::has_create_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JobStatus::set_has_create_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void JobStatus::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void JobStatus::clear_create_time() {
  create_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_create_time();
}
inline const ::std::string& JobStatus::create_time() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobStatus.create_time)
  return create_time_.GetNoArena();
}
inline void JobStatus::set_create_time(const ::std::string& value) {
  set_has_create_time();
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.JobStatus.create_time)
}
#if LANG_CXX11
inline void JobStatus::set_create_time(::std::string&& value) {
  set_has_create_time();
  create_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.JobStatus.create_time)
}
#endif
inline void JobStatus::set_create_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_create_time();
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.JobStatus.create_time)
}
inline void JobStatus::set_create_time(const char* value, size_t size) {
  set_has_create_time();
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.JobStatus.create_time)
}
inline ::std::string* JobStatus::mutable_create_time() {
  set_has_create_time();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobStatus.create_time)
  return create_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobStatus::release_create_time() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobStatus.create_time)
  if (!has_create_time()) {
    return NULL;
  }
  clear_has_create_time();
  return create_time_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobStatus::set_allocated_create_time(::std::string* create_time) {
  if (create_time != NULL) {
    set_has_create_time();
  } else {
    clear_has_create_time();
  }
  create_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), create_time);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.JobStatus.create_time)
}

// -------------------------------------------------------------------

// JobResult

// required string result = 1;
inline bool JobResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JobResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JobResult::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_result();
}
inline const ::std::string& JobResult::result() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobResult.result)
  return result_.GetNoArena();
}
inline void JobResult::set_result(const ::std::string& value) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.JobResult.result)
}
#if LANG_CXX11
inline void JobResult::set_result(::std::string&& value) {
  set_has_result();
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.JobResult.result)
}
#endif
inline void JobResult::set_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.JobResult.result)
}
inline void JobResult::set_result(const char* value, size_t size) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.JobResult.result)
}
inline ::std::string* JobResult::mutable_result() {
  set_has_result();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobResult.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobResult::release_result() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobResult.result)
  if (!has_result()) {
    return NULL;
  }
  clear_has_result();
  return result_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobResult::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    set_has_result();
  } else {
    clear_has_result();
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.JobResult.result)
}

// -------------------------------------------------------------------

// CreateJobRequest

// required string start_time = 3;
inline bool CreateJobRequest::has_start_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateJobRequest::set_has_start_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateJobRequest::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateJobRequest::clear_start_time() {
  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_start_time();
}
inline const ::std::string& CreateJobRequest::start_time() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.CreateJobRequest.start_time)
  return start_time_.GetNoArena();
}
inline void CreateJobRequest::set_start_time(const ::std::string& value) {
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.CreateJobRequest.start_time)
}
#if LANG_CXX11
inline void CreateJobRequest::set_start_time(::std::string&& value) {
  set_has_start_time();
  start_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.CreateJobRequest.start_time)
}
#endif
inline void CreateJobRequest::set_start_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.CreateJobRequest.start_time)
}
inline void CreateJobRequest::set_start_time(const char* value, size_t size) {
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.CreateJobRequest.start_time)
}
inline ::std::string* CreateJobRequest::mutable_start_time() {
  set_has_start_time();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.CreateJobRequest.start_time)
  return start_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateJobRequest::release_start_time() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.CreateJobRequest.start_time)
  if (!has_start_time()) {
    return NULL;
  }
  clear_has_start_time();
  return start_time_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateJobRequest::set_allocated_start_time(::std::string* start_time) {
  if (start_time != NULL) {
    set_has_start_time();
  } else {
    clear_has_start_time();
  }
  start_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_time);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.CreateJobRequest.start_time)
}

// required string period = 4;
inline bool CreateJobRequest::has_period() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateJobRequest::set_has_period() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateJobRequest::clear_has_period() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateJobRequest::clear_period() {
  period_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_period();
}
inline const ::std::string& CreateJobRequest::period() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.CreateJobRequest.period)
  return period_.GetNoArena();
}
inline void CreateJobRequest::set_period(const ::std::string& value) {
  set_has_period();
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.CreateJobRequest.period)
}
#if LANG_CXX11
inline void CreateJobRequest::set_period(::std::string&& value) {
  set_has_period();
  period_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.CreateJobRequest.period)
}
#endif
inline void CreateJobRequest::set_period(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_period();
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.CreateJobRequest.period)
}
inline void CreateJobRequest::set_period(const char* value, size_t size) {
  set_has_period();
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.CreateJobRequest.period)
}
inline ::std::string* CreateJobRequest::mutable_period() {
  set_has_period();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.CreateJobRequest.period)
  return period_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateJobRequest::release_period() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.CreateJobRequest.period)
  if (!has_period()) {
    return NULL;
  }
  clear_has_period();
  return period_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateJobRequest::set_allocated_period(::std::string* period) {
  if (period != NULL) {
    set_has_period();
  } else {
    clear_has_period();
  }
  period_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), period);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.CreateJobRequest.period)
}

// required string procedure_name = 5;
inline bool CreateJobRequest::has_procedure_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateJobRequest::set_has_procedure_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateJobRequest::clear_has_procedure_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateJobRequest::clear_procedure_name() {
  procedure_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_procedure_name();
}
inline const ::std::string& CreateJobRequest::procedure_name() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.CreateJobRequest.procedure_name)
  return procedure_name_.GetNoArena();
}
inline void CreateJobRequest::set_procedure_name(const ::std::string& value) {
  set_has_procedure_name();
  procedure_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.CreateJobRequest.procedure_name)
}
#if LANG_CXX11
inline void CreateJobRequest::set_procedure_name(::std::string&& value) {
  set_has_procedure_name();
  procedure_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.CreateJobRequest.procedure_name)
}
#endif
inline void CreateJobRequest::set_procedure_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_procedure_name();
  procedure_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.CreateJobRequest.procedure_name)
}
inline void CreateJobRequest::set_procedure_name(const char* value, size_t size) {
  set_has_procedure_name();
  procedure_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.CreateJobRequest.procedure_name)
}
inline ::std::string* CreateJobRequest::mutable_procedure_name() {
  set_has_procedure_name();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.CreateJobRequest.procedure_name)
  return procedure_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateJobRequest::release_procedure_name() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.CreateJobRequest.procedure_name)
  if (!has_procedure_name()) {
    return NULL;
  }
  clear_has_procedure_name();
  return procedure_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateJobRequest::set_allocated_procedure_name(::std::string* procedure_name) {
  if (procedure_name != NULL) {
    set_has_procedure_name();
  } else {
    clear_has_procedure_name();
  }
  procedure_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), procedure_name);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.CreateJobRequest.procedure_name)
}

// required string procedure_type = 6;
inline bool CreateJobRequest::has_procedure_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateJobRequest::set_has_procedure_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateJobRequest::clear_has_procedure_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateJobRequest::clear_procedure_type() {
  procedure_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_procedure_type();
}
inline const ::std::string& CreateJobRequest::procedure_type() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.CreateJobRequest.procedure_type)
  return procedure_type_.GetNoArena();
}
inline void CreateJobRequest::set_procedure_type(const ::std::string& value) {
  set_has_procedure_type();
  procedure_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.CreateJobRequest.procedure_type)
}
#if LANG_CXX11
inline void CreateJobRequest::set_procedure_type(::std::string&& value) {
  set_has_procedure_type();
  procedure_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.CreateJobRequest.procedure_type)
}
#endif
inline void CreateJobRequest::set_procedure_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_procedure_type();
  procedure_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.CreateJobRequest.procedure_type)
}
inline void CreateJobRequest::set_procedure_type(const char* value, size_t size) {
  set_has_procedure_type();
  procedure_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.CreateJobRequest.procedure_type)
}
inline ::std::string* CreateJobRequest::mutable_procedure_type() {
  set_has_procedure_type();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.CreateJobRequest.procedure_type)
  return procedure_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateJobRequest::release_procedure_type() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.CreateJobRequest.procedure_type)
  if (!has_procedure_type()) {
    return NULL;
  }
  clear_has_procedure_type();
  return procedure_type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateJobRequest::set_allocated_procedure_type(::std::string* procedure_type) {
  if (procedure_type != NULL) {
    set_has_procedure_type();
  } else {
    clear_has_procedure_type();
  }
  procedure_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), procedure_type);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.CreateJobRequest.procedure_type)
}

// required string creator = 7;
inline bool CreateJobRequest::has_creator() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateJobRequest::set_has_creator() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateJobRequest::clear_has_creator() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateJobRequest::clear_creator() {
  creator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creator();
}
inline const ::std::string& CreateJobRequest::creator() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.CreateJobRequest.creator)
  return creator_.GetNoArena();
}
inline void CreateJobRequest::set_creator(const ::std::string& value) {
  set_has_creator();
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.CreateJobRequest.creator)
}
#if LANG_CXX11
inline void CreateJobRequest::set_creator(::std::string&& value) {
  set_has_creator();
  creator_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.CreateJobRequest.creator)
}
#endif
inline void CreateJobRequest::set_creator(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_creator();
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.CreateJobRequest.creator)
}
inline void CreateJobRequest::set_creator(const char* value, size_t size) {
  set_has_creator();
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.CreateJobRequest.creator)
}
inline ::std::string* CreateJobRequest::mutable_creator() {
  set_has_creator();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.CreateJobRequest.creator)
  return creator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateJobRequest::release_creator() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.CreateJobRequest.creator)
  if (!has_creator()) {
    return NULL;
  }
  clear_has_creator();
  return creator_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateJobRequest::set_allocated_creator(::std::string* creator) {
  if (creator != NULL) {
    set_has_creator();
  } else {
    clear_has_creator();
  }
  creator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creator);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.CreateJobRequest.creator)
}

// required string create_time = 8;
inline bool CreateJobRequest::has_create_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateJobRequest::set_has_create_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateJobRequest::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateJobRequest::clear_create_time() {
  create_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_create_time();
}
inline const ::std::string& CreateJobRequest::create_time() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.CreateJobRequest.create_time)
  return create_time_.GetNoArena();
}
inline void CreateJobRequest::set_create_time(const ::std::string& value) {
  set_has_create_time();
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.CreateJobRequest.create_time)
}
#if LANG_CXX11
inline void CreateJobRequest::set_create_time(::std::string&& value) {
  set_has_create_time();
  create_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.CreateJobRequest.create_time)
}
#endif
inline void CreateJobRequest::set_create_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_create_time();
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.CreateJobRequest.create_time)
}
inline void CreateJobRequest::set_create_time(const char* value, size_t size) {
  set_has_create_time();
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.CreateJobRequest.create_time)
}
inline ::std::string* CreateJobRequest::mutable_create_time() {
  set_has_create_time();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.CreateJobRequest.create_time)
  return create_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateJobRequest::release_create_time() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.CreateJobRequest.create_time)
  if (!has_create_time()) {
    return NULL;
  }
  clear_has_create_time();
  return create_time_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateJobRequest::set_allocated_create_time(::std::string* create_time) {
  if (create_time != NULL) {
    set_has_create_time();
  } else {
    clear_has_create_time();
  }
  create_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), create_time);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.CreateJobRequest.create_time)
}

// -------------------------------------------------------------------

// CreateJobResponse

// optional int64 job_id = 2;
inline bool CreateJobResponse::has_job_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateJobResponse::set_has_job_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateJobResponse::clear_has_job_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateJobResponse::clear_job_id() {
  job_id_ = GOOGLE_LONGLONG(0);
  clear_has_job_id();
}
inline ::google::protobuf::int64 CreateJobResponse::job_id() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.CreateJobResponse.job_id)
  return job_id_;
}
inline void CreateJobResponse::set_job_id(::google::protobuf::int64 value) {
  set_has_job_id();
  job_id_ = value;
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.CreateJobResponse.job_id)
}

// -------------------------------------------------------------------

// ReadJobRequest

// required .com.antgroup.tugraph.ReadJobRequest.ReadType read_type = 4;
inline bool ReadJobRequest::has_read_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadJobRequest::set_has_read_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadJobRequest::clear_has_read_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadJobRequest::clear_read_type() {
  read_type_ = 2;
  clear_has_read_type();
}
inline ::com::antgroup::tugraph::ReadJobRequest_ReadType ReadJobRequest::read_type() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.ReadJobRequest.read_type)
  return static_cast< ::com::antgroup::tugraph::ReadJobRequest_ReadType >(read_type_);
}
inline void ReadJobRequest::set_read_type(::com::antgroup::tugraph::ReadJobRequest_ReadType value) {
  assert(::com::antgroup::tugraph::ReadJobRequest_ReadType_IsValid(value));
  set_has_read_type();
  read_type_ = value;
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.ReadJobRequest.read_type)
}

// optional int64 job_id = 1;
inline bool ReadJobRequest::has_job_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadJobRequest::set_has_job_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadJobRequest::clear_has_job_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadJobRequest::clear_job_id() {
  job_id_ = GOOGLE_LONGLONG(0);
  clear_has_job_id();
}
inline ::google::protobuf::int64 ReadJobRequest::job_id() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.ReadJobRequest.job_id)
  return job_id_;
}
inline void ReadJobRequest::set_job_id(::google::protobuf::int64 value) {
  set_has_job_id();
  job_id_ = value;
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.ReadJobRequest.job_id)
}

// -------------------------------------------------------------------

// ReadJobResponse

// required string result = 1;
inline bool ReadJobResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadJobResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadJobResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadJobResponse::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_result();
}
inline const ::std::string& ReadJobResponse::result() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.ReadJobResponse.result)
  return result_.GetNoArena();
}
inline void ReadJobResponse::set_result(const ::std::string& value) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.ReadJobResponse.result)
}
#if LANG_CXX11
inline void ReadJobResponse::set_result(::std::string&& value) {
  set_has_result();
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.ReadJobResponse.result)
}
#endif
inline void ReadJobResponse::set_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.ReadJobResponse.result)
}
inline void ReadJobResponse::set_result(const char* value, size_t size) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.ReadJobResponse.result)
}
inline ::std::string* ReadJobResponse::mutable_result() {
  set_has_result();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.ReadJobResponse.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadJobResponse::release_result() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.ReadJobResponse.result)
  if (!has_result()) {
    return NULL;
  }
  clear_has_result();
  return result_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadJobResponse::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    set_has_result();
  } else {
    clear_has_result();
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.ReadJobResponse.result)
}

// -------------------------------------------------------------------

// UpdateJobRequest

// required int64 job_id = 1;
inline bool UpdateJobRequest::has_job_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateJobRequest::set_has_job_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateJobRequest::clear_has_job_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateJobRequest::clear_job_id() {
  job_id_ = GOOGLE_LONGLONG(0);
  clear_has_job_id();
}
inline ::google::protobuf::int64 UpdateJobRequest::job_id() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.UpdateJobRequest.job_id)
  return job_id_;
}
inline void UpdateJobRequest::set_job_id(::google::protobuf::int64 value) {
  set_has_job_id();
  job_id_ = value;
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.UpdateJobRequest.job_id)
}

// required string status = 2;
inline bool UpdateJobRequest::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateJobRequest::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateJobRequest::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateJobRequest::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_status();
}
inline const ::std::string& UpdateJobRequest::status() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.UpdateJobRequest.status)
  return status_.GetNoArena();
}
inline void UpdateJobRequest::set_status(const ::std::string& value) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.UpdateJobRequest.status)
}
#if LANG_CXX11
inline void UpdateJobRequest::set_status(::std::string&& value) {
  set_has_status();
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.UpdateJobRequest.status)
}
#endif
inline void UpdateJobRequest::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.UpdateJobRequest.status)
}
inline void UpdateJobRequest::set_status(const char* value, size_t size) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.UpdateJobRequest.status)
}
inline ::std::string* UpdateJobRequest::mutable_status() {
  set_has_status();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.UpdateJobRequest.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateJobRequest::release_status() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.UpdateJobRequest.status)
  if (!has_status()) {
    return NULL;
  }
  clear_has_status();
  return status_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateJobRequest::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    set_has_status();
  } else {
    clear_has_status();
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.UpdateJobRequest.status)
}

// optional string runtime = 3;
inline bool UpdateJobRequest::has_runtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateJobRequest::set_has_runtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateJobRequest::clear_has_runtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateJobRequest::clear_runtime() {
  runtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_runtime();
}
inline const ::std::string& UpdateJobRequest::runtime() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.UpdateJobRequest.runtime)
  return runtime_.GetNoArena();
}
inline void UpdateJobRequest::set_runtime(const ::std::string& value) {
  set_has_runtime();
  runtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.UpdateJobRequest.runtime)
}
#if LANG_CXX11
inline void UpdateJobRequest::set_runtime(::std::string&& value) {
  set_has_runtime();
  runtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.UpdateJobRequest.runtime)
}
#endif
inline void UpdateJobRequest::set_runtime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_runtime();
  runtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.UpdateJobRequest.runtime)
}
inline void UpdateJobRequest::set_runtime(const char* value, size_t size) {
  set_has_runtime();
  runtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.UpdateJobRequest.runtime)
}
inline ::std::string* UpdateJobRequest::mutable_runtime() {
  set_has_runtime();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.UpdateJobRequest.runtime)
  return runtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateJobRequest::release_runtime() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.UpdateJobRequest.runtime)
  if (!has_runtime()) {
    return NULL;
  }
  clear_has_runtime();
  return runtime_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateJobRequest::set_allocated_runtime(::std::string* runtime) {
  if (runtime != NULL) {
    set_has_runtime();
  } else {
    clear_has_runtime();
  }
  runtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), runtime);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.UpdateJobRequest.runtime)
}

// optional string result = 4;
inline bool UpdateJobRequest::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateJobRequest::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateJobRequest::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateJobRequest::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_result();
}
inline const ::std::string& UpdateJobRequest::result() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.UpdateJobRequest.result)
  return result_.GetNoArena();
}
inline void UpdateJobRequest::set_result(const ::std::string& value) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.UpdateJobRequest.result)
}
#if LANG_CXX11
inline void UpdateJobRequest::set_result(::std::string&& value) {
  set_has_result();
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.UpdateJobRequest.result)
}
#endif
inline void UpdateJobRequest::set_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.UpdateJobRequest.result)
}
inline void UpdateJobRequest::set_result(const char* value, size_t size) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.UpdateJobRequest.result)
}
inline ::std::string* UpdateJobRequest::mutable_result() {
  set_has_result();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.UpdateJobRequest.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateJobRequest::release_result() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.UpdateJobRequest.result)
  if (!has_result()) {
    return NULL;
  }
  clear_has_result();
  return result_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateJobRequest::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    set_has_result();
  } else {
    clear_has_result();
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.UpdateJobRequest.result)
}

// -------------------------------------------------------------------

// UpdateJobResponse

// -------------------------------------------------------------------

// DeleteJobRequest

// required string procedure_name = 1;
inline bool DeleteJobRequest::has_procedure_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteJobRequest::set_has_procedure_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteJobRequest::clear_has_procedure_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteJobRequest::clear_procedure_name() {
  procedure_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_procedure_name();
}
inline const ::std::string& DeleteJobRequest::procedure_name() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.DeleteJobRequest.procedure_name)
  return procedure_name_.GetNoArena();
}
inline void DeleteJobRequest::set_procedure_name(const ::std::string& value) {
  set_has_procedure_name();
  procedure_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.DeleteJobRequest.procedure_name)
}
#if LANG_CXX11
inline void DeleteJobRequest::set_procedure_name(::std::string&& value) {
  set_has_procedure_name();
  procedure_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.DeleteJobRequest.procedure_name)
}
#endif
inline void DeleteJobRequest::set_procedure_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_procedure_name();
  procedure_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.DeleteJobRequest.procedure_name)
}
inline void DeleteJobRequest::set_procedure_name(const char* value, size_t size) {
  set_has_procedure_name();
  procedure_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.DeleteJobRequest.procedure_name)
}
inline ::std::string* DeleteJobRequest::mutable_procedure_name() {
  set_has_procedure_name();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.DeleteJobRequest.procedure_name)
  return procedure_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteJobRequest::release_procedure_name() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.DeleteJobRequest.procedure_name)
  if (!has_procedure_name()) {
    return NULL;
  }
  clear_has_procedure_name();
  return procedure_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteJobRequest::set_allocated_procedure_name(::std::string* procedure_name) {
  if (procedure_name != NULL) {
    set_has_procedure_name();
  } else {
    clear_has_procedure_name();
  }
  procedure_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), procedure_name);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.DeleteJobRequest.procedure_name)
}

// -------------------------------------------------------------------

// DeleteJobResponse

// -------------------------------------------------------------------

// JobManagementRequest

// required string db_host = 5;
inline bool JobManagementRequest::has_db_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobManagementRequest::set_has_db_host() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JobManagementRequest::clear_has_db_host() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JobManagementRequest::clear_db_host() {
  db_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db_host();
}
inline const ::std::string& JobManagementRequest::db_host() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobManagementRequest.db_host)
  return db_host_.GetNoArena();
}
inline void JobManagementRequest::set_db_host(const ::std::string& value) {
  set_has_db_host();
  db_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.JobManagementRequest.db_host)
}
#if LANG_CXX11
inline void JobManagementRequest::set_db_host(::std::string&& value) {
  set_has_db_host();
  db_host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.JobManagementRequest.db_host)
}
#endif
inline void JobManagementRequest::set_db_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_db_host();
  db_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.JobManagementRequest.db_host)
}
inline void JobManagementRequest::set_db_host(const char* value, size_t size) {
  set_has_db_host();
  db_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.JobManagementRequest.db_host)
}
inline ::std::string* JobManagementRequest::mutable_db_host() {
  set_has_db_host();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobManagementRequest.db_host)
  return db_host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobManagementRequest::release_db_host() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobManagementRequest.db_host)
  if (!has_db_host()) {
    return NULL;
  }
  clear_has_db_host();
  return db_host_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobManagementRequest::set_allocated_db_host(::std::string* db_host) {
  if (db_host != NULL) {
    set_has_db_host();
  } else {
    clear_has_db_host();
  }
  db_host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_host);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.JobManagementRequest.db_host)
}

// required string db_port = 6;
inline bool JobManagementRequest::has_db_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobManagementRequest::set_has_db_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JobManagementRequest::clear_has_db_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JobManagementRequest::clear_db_port() {
  db_port_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db_port();
}
inline const ::std::string& JobManagementRequest::db_port() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobManagementRequest.db_port)
  return db_port_.GetNoArena();
}
inline void JobManagementRequest::set_db_port(const ::std::string& value) {
  set_has_db_port();
  db_port_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.JobManagementRequest.db_port)
}
#if LANG_CXX11
inline void JobManagementRequest::set_db_port(::std::string&& value) {
  set_has_db_port();
  db_port_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.antgroup.tugraph.JobManagementRequest.db_port)
}
#endif
inline void JobManagementRequest::set_db_port(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_db_port();
  db_port_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.antgroup.tugraph.JobManagementRequest.db_port)
}
inline void JobManagementRequest::set_db_port(const char* value, size_t size) {
  set_has_db_port();
  db_port_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.antgroup.tugraph.JobManagementRequest.db_port)
}
inline ::std::string* JobManagementRequest::mutable_db_port() {
  set_has_db_port();
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobManagementRequest.db_port)
  return db_port_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobManagementRequest::release_db_port() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobManagementRequest.db_port)
  if (!has_db_port()) {
    return NULL;
  }
  clear_has_db_port();
  return db_port_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobManagementRequest::set_allocated_db_port(::std::string* db_port) {
  if (db_port != NULL) {
    set_has_db_port();
  } else {
    clear_has_db_port();
  }
  db_port_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_port);
  // @@protoc_insertion_point(field_set_allocated:com.antgroup.tugraph.JobManagementRequest.db_port)
}

// optional .com.antgroup.tugraph.CreateJobRequest create_job_request = 1;
inline bool JobManagementRequest::has_create_job_request() const {
  return Req_case() == kCreateJobRequest;
}
inline void JobManagementRequest::set_has_create_job_request() {
  _oneof_case_[0] = kCreateJobRequest;
}
inline void JobManagementRequest::clear_create_job_request() {
  if (has_create_job_request()) {
    delete Req_.create_job_request_;
    clear_has_Req();
  }
}
inline const ::com::antgroup::tugraph::CreateJobRequest& JobManagementRequest::_internal_create_job_request() const {
  return *Req_.create_job_request_;
}
inline ::com::antgroup::tugraph::CreateJobRequest* JobManagementRequest::release_create_job_request() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobManagementRequest.create_job_request)
  if (has_create_job_request()) {
    clear_has_Req();
      ::com::antgroup::tugraph::CreateJobRequest* temp = Req_.create_job_request_;
    Req_.create_job_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::com::antgroup::tugraph::CreateJobRequest& JobManagementRequest::create_job_request() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobManagementRequest.create_job_request)
  return has_create_job_request()
      ? *Req_.create_job_request_
      : *reinterpret_cast< ::com::antgroup::tugraph::CreateJobRequest*>(&::com::antgroup::tugraph::_CreateJobRequest_default_instance_);
}
inline ::com::antgroup::tugraph::CreateJobRequest* JobManagementRequest::mutable_create_job_request() {
  if (!has_create_job_request()) {
    clear_Req();
    set_has_create_job_request();
    Req_.create_job_request_ = CreateMaybeMessage< ::com::antgroup::tugraph::CreateJobRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobManagementRequest.create_job_request)
  return Req_.create_job_request_;
}

// optional .com.antgroup.tugraph.ReadJobRequest read_job_request = 2;
inline bool JobManagementRequest::has_read_job_request() const {
  return Req_case() == kReadJobRequest;
}
inline void JobManagementRequest::set_has_read_job_request() {
  _oneof_case_[0] = kReadJobRequest;
}
inline void JobManagementRequest::clear_read_job_request() {
  if (has_read_job_request()) {
    delete Req_.read_job_request_;
    clear_has_Req();
  }
}
inline const ::com::antgroup::tugraph::ReadJobRequest& JobManagementRequest::_internal_read_job_request() const {
  return *Req_.read_job_request_;
}
inline ::com::antgroup::tugraph::ReadJobRequest* JobManagementRequest::release_read_job_request() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobManagementRequest.read_job_request)
  if (has_read_job_request()) {
    clear_has_Req();
      ::com::antgroup::tugraph::ReadJobRequest* temp = Req_.read_job_request_;
    Req_.read_job_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::com::antgroup::tugraph::ReadJobRequest& JobManagementRequest::read_job_request() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobManagementRequest.read_job_request)
  return has_read_job_request()
      ? *Req_.read_job_request_
      : *reinterpret_cast< ::com::antgroup::tugraph::ReadJobRequest*>(&::com::antgroup::tugraph::_ReadJobRequest_default_instance_);
}
inline ::com::antgroup::tugraph::ReadJobRequest* JobManagementRequest::mutable_read_job_request() {
  if (!has_read_job_request()) {
    clear_Req();
    set_has_read_job_request();
    Req_.read_job_request_ = CreateMaybeMessage< ::com::antgroup::tugraph::ReadJobRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobManagementRequest.read_job_request)
  return Req_.read_job_request_;
}

// optional .com.antgroup.tugraph.UpdateJobRequest update_job_request = 3;
inline bool JobManagementRequest::has_update_job_request() const {
  return Req_case() == kUpdateJobRequest;
}
inline void JobManagementRequest::set_has_update_job_request() {
  _oneof_case_[0] = kUpdateJobRequest;
}
inline void JobManagementRequest::clear_update_job_request() {
  if (has_update_job_request()) {
    delete Req_.update_job_request_;
    clear_has_Req();
  }
}
inline const ::com::antgroup::tugraph::UpdateJobRequest& JobManagementRequest::_internal_update_job_request() const {
  return *Req_.update_job_request_;
}
inline ::com::antgroup::tugraph::UpdateJobRequest* JobManagementRequest::release_update_job_request() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobManagementRequest.update_job_request)
  if (has_update_job_request()) {
    clear_has_Req();
      ::com::antgroup::tugraph::UpdateJobRequest* temp = Req_.update_job_request_;
    Req_.update_job_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::com::antgroup::tugraph::UpdateJobRequest& JobManagementRequest::update_job_request() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobManagementRequest.update_job_request)
  return has_update_job_request()
      ? *Req_.update_job_request_
      : *reinterpret_cast< ::com::antgroup::tugraph::UpdateJobRequest*>(&::com::antgroup::tugraph::_UpdateJobRequest_default_instance_);
}
inline ::com::antgroup::tugraph::UpdateJobRequest* JobManagementRequest::mutable_update_job_request() {
  if (!has_update_job_request()) {
    clear_Req();
    set_has_update_job_request();
    Req_.update_job_request_ = CreateMaybeMessage< ::com::antgroup::tugraph::UpdateJobRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobManagementRequest.update_job_request)
  return Req_.update_job_request_;
}

// optional .com.antgroup.tugraph.DeleteJobRequest delete_job_request = 4;
inline bool JobManagementRequest::has_delete_job_request() const {
  return Req_case() == kDeleteJobRequest;
}
inline void JobManagementRequest::set_has_delete_job_request() {
  _oneof_case_[0] = kDeleteJobRequest;
}
inline void JobManagementRequest::clear_delete_job_request() {
  if (has_delete_job_request()) {
    delete Req_.delete_job_request_;
    clear_has_Req();
  }
}
inline const ::com::antgroup::tugraph::DeleteJobRequest& JobManagementRequest::_internal_delete_job_request() const {
  return *Req_.delete_job_request_;
}
inline ::com::antgroup::tugraph::DeleteJobRequest* JobManagementRequest::release_delete_job_request() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobManagementRequest.delete_job_request)
  if (has_delete_job_request()) {
    clear_has_Req();
      ::com::antgroup::tugraph::DeleteJobRequest* temp = Req_.delete_job_request_;
    Req_.delete_job_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::com::antgroup::tugraph::DeleteJobRequest& JobManagementRequest::delete_job_request() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobManagementRequest.delete_job_request)
  return has_delete_job_request()
      ? *Req_.delete_job_request_
      : *reinterpret_cast< ::com::antgroup::tugraph::DeleteJobRequest*>(&::com::antgroup::tugraph::_DeleteJobRequest_default_instance_);
}
inline ::com::antgroup::tugraph::DeleteJobRequest* JobManagementRequest::mutable_delete_job_request() {
  if (!has_delete_job_request()) {
    clear_Req();
    set_has_delete_job_request();
    Req_.delete_job_request_ = CreateMaybeMessage< ::com::antgroup::tugraph::DeleteJobRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobManagementRequest.delete_job_request)
  return Req_.delete_job_request_;
}

inline bool JobManagementRequest::has_Req() const {
  return Req_case() != REQ_NOT_SET;
}
inline void JobManagementRequest::clear_has_Req() {
  _oneof_case_[0] = REQ_NOT_SET;
}
inline JobManagementRequest::ReqCase JobManagementRequest::Req_case() const {
  return JobManagementRequest::ReqCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// JobManagementResponse

// required .com.antgroup.tugraph.JobManagementResponse.ErrorCode error_code = 5;
inline bool JobManagementResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobManagementResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JobManagementResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JobManagementResponse::clear_error_code() {
  error_code_ = 1;
  clear_has_error_code();
}
inline ::com::antgroup::tugraph::JobManagementResponse_ErrorCode JobManagementResponse::error_code() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobManagementResponse.error_code)
  return static_cast< ::com::antgroup::tugraph::JobManagementResponse_ErrorCode >(error_code_);
}
inline void JobManagementResponse::set_error_code(::com::antgroup::tugraph::JobManagementResponse_ErrorCode value) {
  assert(::com::antgroup::tugraph::JobManagementResponse_ErrorCode_IsValid(value));
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:com.antgroup.tugraph.JobManagementResponse.error_code)
}

// optional .com.antgroup.tugraph.CreateJobResponse create_job_response = 1;
inline bool JobManagementResponse::has_create_job_response() const {
  return Resp_case() == kCreateJobResponse;
}
inline void JobManagementResponse::set_has_create_job_response() {
  _oneof_case_[0] = kCreateJobResponse;
}
inline void JobManagementResponse::clear_create_job_response() {
  if (has_create_job_response()) {
    delete Resp_.create_job_response_;
    clear_has_Resp();
  }
}
inline const ::com::antgroup::tugraph::CreateJobResponse& JobManagementResponse::_internal_create_job_response() const {
  return *Resp_.create_job_response_;
}
inline ::com::antgroup::tugraph::CreateJobResponse* JobManagementResponse::release_create_job_response() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobManagementResponse.create_job_response)
  if (has_create_job_response()) {
    clear_has_Resp();
      ::com::antgroup::tugraph::CreateJobResponse* temp = Resp_.create_job_response_;
    Resp_.create_job_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::com::antgroup::tugraph::CreateJobResponse& JobManagementResponse::create_job_response() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobManagementResponse.create_job_response)
  return has_create_job_response()
      ? *Resp_.create_job_response_
      : *reinterpret_cast< ::com::antgroup::tugraph::CreateJobResponse*>(&::com::antgroup::tugraph::_CreateJobResponse_default_instance_);
}
inline ::com::antgroup::tugraph::CreateJobResponse* JobManagementResponse::mutable_create_job_response() {
  if (!has_create_job_response()) {
    clear_Resp();
    set_has_create_job_response();
    Resp_.create_job_response_ = CreateMaybeMessage< ::com::antgroup::tugraph::CreateJobResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobManagementResponse.create_job_response)
  return Resp_.create_job_response_;
}

// optional .com.antgroup.tugraph.ReadJobResponse read_job_response = 2;
inline bool JobManagementResponse::has_read_job_response() const {
  return Resp_case() == kReadJobResponse;
}
inline void JobManagementResponse::set_has_read_job_response() {
  _oneof_case_[0] = kReadJobResponse;
}
inline void JobManagementResponse::clear_read_job_response() {
  if (has_read_job_response()) {
    delete Resp_.read_job_response_;
    clear_has_Resp();
  }
}
inline const ::com::antgroup::tugraph::ReadJobResponse& JobManagementResponse::_internal_read_job_response() const {
  return *Resp_.read_job_response_;
}
inline ::com::antgroup::tugraph::ReadJobResponse* JobManagementResponse::release_read_job_response() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobManagementResponse.read_job_response)
  if (has_read_job_response()) {
    clear_has_Resp();
      ::com::antgroup::tugraph::ReadJobResponse* temp = Resp_.read_job_response_;
    Resp_.read_job_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::com::antgroup::tugraph::ReadJobResponse& JobManagementResponse::read_job_response() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobManagementResponse.read_job_response)
  return has_read_job_response()
      ? *Resp_.read_job_response_
      : *reinterpret_cast< ::com::antgroup::tugraph::ReadJobResponse*>(&::com::antgroup::tugraph::_ReadJobResponse_default_instance_);
}
inline ::com::antgroup::tugraph::ReadJobResponse* JobManagementResponse::mutable_read_job_response() {
  if (!has_read_job_response()) {
    clear_Resp();
    set_has_read_job_response();
    Resp_.read_job_response_ = CreateMaybeMessage< ::com::antgroup::tugraph::ReadJobResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobManagementResponse.read_job_response)
  return Resp_.read_job_response_;
}

// optional .com.antgroup.tugraph.UpdateJobResponse update_job_response = 3;
inline bool JobManagementResponse::has_update_job_response() const {
  return Resp_case() == kUpdateJobResponse;
}
inline void JobManagementResponse::set_has_update_job_response() {
  _oneof_case_[0] = kUpdateJobResponse;
}
inline void JobManagementResponse::clear_update_job_response() {
  if (has_update_job_response()) {
    delete Resp_.update_job_response_;
    clear_has_Resp();
  }
}
inline const ::com::antgroup::tugraph::UpdateJobResponse& JobManagementResponse::_internal_update_job_response() const {
  return *Resp_.update_job_response_;
}
inline ::com::antgroup::tugraph::UpdateJobResponse* JobManagementResponse::release_update_job_response() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobManagementResponse.update_job_response)
  if (has_update_job_response()) {
    clear_has_Resp();
      ::com::antgroup::tugraph::UpdateJobResponse* temp = Resp_.update_job_response_;
    Resp_.update_job_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::com::antgroup::tugraph::UpdateJobResponse& JobManagementResponse::update_job_response() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobManagementResponse.update_job_response)
  return has_update_job_response()
      ? *Resp_.update_job_response_
      : *reinterpret_cast< ::com::antgroup::tugraph::UpdateJobResponse*>(&::com::antgroup::tugraph::_UpdateJobResponse_default_instance_);
}
inline ::com::antgroup::tugraph::UpdateJobResponse* JobManagementResponse::mutable_update_job_response() {
  if (!has_update_job_response()) {
    clear_Resp();
    set_has_update_job_response();
    Resp_.update_job_response_ = CreateMaybeMessage< ::com::antgroup::tugraph::UpdateJobResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobManagementResponse.update_job_response)
  return Resp_.update_job_response_;
}

// optional .com.antgroup.tugraph.DeleteJobResponse delete_job_response = 4;
inline bool JobManagementResponse::has_delete_job_response() const {
  return Resp_case() == kDeleteJobResponse;
}
inline void JobManagementResponse::set_has_delete_job_response() {
  _oneof_case_[0] = kDeleteJobResponse;
}
inline void JobManagementResponse::clear_delete_job_response() {
  if (has_delete_job_response()) {
    delete Resp_.delete_job_response_;
    clear_has_Resp();
  }
}
inline const ::com::antgroup::tugraph::DeleteJobResponse& JobManagementResponse::_internal_delete_job_response() const {
  return *Resp_.delete_job_response_;
}
inline ::com::antgroup::tugraph::DeleteJobResponse* JobManagementResponse::release_delete_job_response() {
  // @@protoc_insertion_point(field_release:com.antgroup.tugraph.JobManagementResponse.delete_job_response)
  if (has_delete_job_response()) {
    clear_has_Resp();
      ::com::antgroup::tugraph::DeleteJobResponse* temp = Resp_.delete_job_response_;
    Resp_.delete_job_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::com::antgroup::tugraph::DeleteJobResponse& JobManagementResponse::delete_job_response() const {
  // @@protoc_insertion_point(field_get:com.antgroup.tugraph.JobManagementResponse.delete_job_response)
  return has_delete_job_response()
      ? *Resp_.delete_job_response_
      : *reinterpret_cast< ::com::antgroup::tugraph::DeleteJobResponse*>(&::com::antgroup::tugraph::_DeleteJobResponse_default_instance_);
}
inline ::com::antgroup::tugraph::DeleteJobResponse* JobManagementResponse::mutable_delete_job_response() {
  if (!has_delete_job_response()) {
    clear_Resp();
    set_has_delete_job_response();
    Resp_.delete_job_response_ = CreateMaybeMessage< ::com::antgroup::tugraph::DeleteJobResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.antgroup.tugraph.JobManagementResponse.delete_job_response)
  return Resp_.delete_job_response_;
}

inline bool JobManagementResponse::has_Resp() const {
  return Resp_case() != RESP_NOT_SET;
}
inline void JobManagementResponse::clear_has_Resp() {
  _oneof_case_[0] = RESP_NOT_SET;
}
inline JobManagementResponse::RespCase JobManagementResponse::Resp_case() const {
  return JobManagementResponse::RespCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tugraph
}  // namespace antgroup
}  // namespace com

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::antgroup::tugraph::ReadJobRequest_ReadType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::antgroup::tugraph::ReadJobRequest_ReadType>() {
  return ::com::antgroup::tugraph::ReadJobRequest_ReadType_descriptor();
}
template <> struct is_proto_enum< ::com::antgroup::tugraph::JobManagementResponse_ErrorCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::antgroup::tugraph::JobManagementResponse_ErrorCode>() {
  return ::com::antgroup::tugraph::JobManagementResponse_ErrorCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tugraph_5fmanagement_2eproto
