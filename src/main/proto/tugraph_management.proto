// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

syntax="proto2";
package com.antgroup.tugraph;

option cc_generic_services = true;

message JobStatus {
      required string db_id = 1;
      required int64 job_id = 2;
      required string start_time = 4;
      required string period = 5;
      required string procedure_name = 6;
      required string procedure_type = 7;
      required string status = 8;
      required string creator = 9;
      required string create_time = 10;
}

message JobResult {
      required string result = 1;
}

message CreateJobRequest {
      required string start_time = 3;
      required string period = 4;
      required string procedure_name = 5;
      required string procedure_type = 6;
      required string creator = 7;
      required string create_time = 8;
}

message CreateJobResponse {
      optional int64 job_id = 2;
}

message ReadJobRequest {
      required int64 job_id = 1;
}

message ReadJobResponse {
      required string result = 1;
}

message UpdateJobRequest {
      required string procedure_name = 1;
      required string status = 2;
      optional string runtime = 3;
      optional string result = 4;
}

message UpdateJobResponse {

}

message DeleteJobRequest {
      required string procedure_name = 1;
}

message DeleteJobResponse {

}

message JobManagementRequest {
      required string db_host = 5;
      required string db_port = 6;
      oneof Req {
            CreateJobRequest create_job_request = 1;
            ReadJobRequest read_job_request = 2;
            UpdateJobRequest update_job_request = 3;
            DeleteJobRequest delete_job_request = 4;
      };
};

message JobManagementResponse {
      enum ErrorCode {
            SUCCESS = 1;
            FAILED = 2;
      };

      required ErrorCode error_code = 5;
      oneof Resp {
            CreateJobResponse create_job_response = 1;
            ReadJobResponse read_job_response = 2;
            UpdateJobResponse update_job_response = 3;
            DeleteJobResponse delete_job_response = 4;
      };
};

service JobManagementService {
      rpc handleRequest(JobManagementRequest) returns (JobManagementResponse);
};
